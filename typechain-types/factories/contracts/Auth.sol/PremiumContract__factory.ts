/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PremiumContract,
  PremiumContractInterface,
} from "../../../contracts/Auth.sol/PremiumContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_password",
        type: "string",
      },
    ],
    name: "checkValidPassword",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkValidPremium",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "premiums",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_premiumIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_password",
        type: "string",
      },
    ],
    name: "purchasePremium",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160405180606001604052806040518060400160405280600881526020017f4f6e654d6f6e74680000000000000000000000000000000000000000000000008152508152602001655af3107a40008152602001601e815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f019081620000e49190620004bc565b5060208201518160010155604082015181600201555050600160405180606001604052806040518060400160405280600981526020017f5369784d6f6e7468730000000000000000000000000000000000000000000000815250815260200165b5e620f480008152602001603c815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f0190816200018f9190620004bc565b5060208201518160010155604082015181600201555050600160405180606001604052806040518060400160405280600781526020017f4f6e6559656172000000000000000000000000000000000000000000000000008152508152602001660110d9316ec00081526020016078815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f0190816200023b9190620004bc565b5060208201518160010155604082015181600201555050620005a0565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002d457607f821691505b602082108103620002ea57620002e96200028f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000311565b6200035a868362000311565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003a46200039e620003988462000372565b6200037b565b62000372565b9050919050565b5f819050919050565b620003bf8362000384565b620003d7620003ce82620003ab565b8484546200031d565b825550505050565b5f90565b620003ed620003df565b620003fa818484620003b4565b505050565b5b818110156200042157620004155f82620003e3565b60018101905062000400565b5050565b601f82111562000470576200043a81620002f0565b620004458462000302565b8101602085101562000455578190505b6200046d620004648562000302565b830182620003ff565b50505b505050565b5f82821c905092915050565b5f620004925f198460080262000475565b1980831691505092915050565b5f620004ac838362000481565b9150826002028217905092915050565b620004c78262000258565b67ffffffffffffffff811115620004e357620004e262000262565b5b620004ef8254620002bc565b620004fc82828562000425565b5f60209050601f83116001811462000532575f84156200051d578287015190505b6200052985826200049f565b86555062000598565b601f1984166200054286620002f0565b5f5b828110156200056b5784890151825560018201915060208501945060208101905062000544565b868310156200058b578489015162000587601f89168262000481565b8355505b6001600288020188555050505b505050505050565b610d8380620005ae5f395ff3fe608060405260043610610049575f3560e01c8063094642611461004d5780633b2d2db11461008b5780637eb6e8bb146100c75780638da5cb5b146100e3578063c381daf61461010d575b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e919061074f565b610137565b60405161008293929190610813565b60405180910390f35b348015610096575f80fd5b506100b160048036038101906100ac919061097b565b6101f2565b6040516100be91906109dc565b60405180910390f35b6100e160048036038101906100dc9190610a52565b610303565b005b3480156100ee575f80fd5b506100f7610613565b6040516101049190610aee565b60405180910390f35b348015610118575f80fd5b50610121610636565b60405161012e91906109dc565b60405180910390f35b60018181548110610146575f80fd5b905f5260205f2090600302015f91509050805f01805461016590610b34565b80601f016020809104026020016040519081016040528092919081815260200182805461019190610b34565b80156101dc5780601f106101b3576101008083540402835291602001916101dc565b820191905f5260205f20905b8154815290600101906020018083116101bf57829003601f168201915b5050505050908060010154908060020154905083565b5f8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090505f836040516020016102cc9190610b9e565b6040516020818303038152906040528051906020012090508082602001511480156102fa5750428260800151115b92505050919050565b600180549050831061034a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190610bfe565b60405180910390fd5b6001838154811061035e5761035d610c1c565b5b905f5260205f2090600302016001015434146103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a690610c93565b60405180910390fd5b5f600184815481106103c4576103c3610c1c565b5b905f5260205f2090600302016040518060600160405290815f820180546103ea90610b34565b80601f016020809104026020016040519081016040528092919081815260200182805461041690610b34565b80156104615780601f1061043857610100808354040283529160200191610461565b820191905f5260205f20905b81548152906001019060200180831161044457829003601f168201915b505050505081526020016001820154815260200160028201548152505090505f8160400151426104919190610cde565b90505f84846040516020016104a7929190610d35565b6040516020818303038152906040528051906020012090506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020018781526020014281526020018381525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155608082015181600401559050505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f1935050505015801561060a573d5f803e3d5ffd5b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090504281608001511191505090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61072e8161071c565b8114610738575f80fd5b50565b5f8135905061074981610725565b92915050565b5f6020828403121561076457610763610714565b5b5f6107718482850161073b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156107b1578082015181840152602081019050610796565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6107d68261077a565b6107e08185610784565b93506107f0818560208601610794565b6107f9816107bc565b840191505092915050565b61080d8161071c565b82525050565b5f6060820190508181035f83015261082b81866107cc565b905061083a6020830185610804565b6108476040830184610804565b949350505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61088d826107bc565b810181811067ffffffffffffffff821117156108ac576108ab610857565b5b80604052505050565b5f6108be61070b565b90506108ca8282610884565b919050565b5f67ffffffffffffffff8211156108e9576108e8610857565b5b6108f2826107bc565b9050602081019050919050565b828183375f83830152505050565b5f61091f61091a846108cf565b6108b5565b90508281526020810184848401111561093b5761093a610853565b5b6109468482856108ff565b509392505050565b5f82601f8301126109625761096161084f565b5b813561097284826020860161090d565b91505092915050565b5f602082840312156109905761098f610714565b5b5f82013567ffffffffffffffff8111156109ad576109ac610718565b5b6109b98482850161094e565b91505092915050565b5f8115159050919050565b6109d6816109c2565b82525050565b5f6020820190506109ef5f8301846109cd565b92915050565b5f80fd5b5f80fd5b5f8083601f840112610a1257610a1161084f565b5b8235905067ffffffffffffffff811115610a2f57610a2e6109f5565b5b602083019150836001820283011115610a4b57610a4a6109f9565b5b9250929050565b5f805f60408486031215610a6957610a68610714565b5b5f610a768682870161073b565b935050602084013567ffffffffffffffff811115610a9757610a96610718565b5b610aa3868287016109fd565b92509250509250925092565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ad882610aaf565b9050919050565b610ae881610ace565b82525050565b5f602082019050610b015f830184610adf565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b4b57607f821691505b602082108103610b5e57610b5d610b07565b5b50919050565b5f81905092915050565b5f610b788261077a565b610b828185610b64565b9350610b92818560208601610794565b80840191505092915050565b5f610ba98284610b6e565b915081905092915050565b7f496e76616c6964207072656d69756d20696e64657800000000000000000000005f82015250565b5f610be8601583610784565b9150610bf382610bb4565b602082019050919050565b5f6020820190508181035f830152610c1581610bdc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e636f7272656374207072656d69756d20616d6f756e7400000000000000005f82015250565b5f610c7d601883610784565b9150610c8882610c49565b602082019050919050565b5f6020820190508181035f830152610caa81610c71565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ce88261071c565b9150610cf38361071c565b9250828201905080821115610d0b57610d0a610cb1565b5b92915050565b5f610d1c8385610b64565b9350610d298385846108ff565b82840190509392505050565b5f610d41828486610d11565b9150819050939250505056fea26469706673582212201b3ee5a09d04061d3a6ba3a9c188d21590a2555121663584f9db1d4c87f1ea6264736f6c63430008140033";

type PremiumContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PremiumContract__factory extends ContractFactory {
  constructor(...args: PremiumContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PremiumContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PremiumContract__factory {
    return super.connect(runner) as PremiumContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumContractInterface {
    return new Interface(_abi) as PremiumContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PremiumContract {
    return new Contract(address, _abi, runner) as unknown as PremiumContract;
  }
}
